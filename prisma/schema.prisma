// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// 유저 정보
// User >- UserCampaign
model User {
  /// UserId
  id        String    @id @default(cuid())
  /// 가입 유형
  provider  String
  /// 카카오 키
  kakaoId   String?
  /// 별명
  nickname  String
  /// 이메일
  email     String?
  /// 프로필 사진
  profile   String?
  deletedAt DateTime?
  updatedAt DateTime  @updatedAt
  createdAt DateTime  @default(now())

  // relation fields
  userCampaignList UserCampaign[]
}

/// 캠페인 리스트
// Campaign >- UserCampaign
model Campaign {
  id               String    @id @default(cuid())
  /// 중복 검증 아이디
  duplicateId      String
  /// 리소스 제공자
  resourceProvider String
  /// 원본 링크
  originUrl        String
  /// 리뷰 대상 플랫폼 (블로그, 인스타)
  targetPlatforms  String
  /// 캠페인 유형 (음식, 전자제품)
  category         String
  /// 캠페인 제목
  title            String
  /// 캠페인 썸네일
  thumbnail        String?
  /// 상세 내용 (캠페인 설명)
  description      String
  /// 캠페인 진행 도시
  city             String?
  /// 캠페인 진행 상세 주소
  address          String?
  /// 캠페인 신청 시작일
  startedAt        DateTime?
  /// 캠페인 신청 종료일
  endedAt          DateTime?
  /// 캠페인 당첨자 발표일
  drawAt           DateTime?
  deletedAt        DateTime?
  updatedAt        DateTime  @updatedAt
  createdAt        DateTime  @default(now())

  // relation fields
  userCampaignList UserCampaign[]
}

/// 캠페인 즐겨찾기
// User >- UserCampaign -< Campaign
model UserCampaign {
  id         String    @id @default(cuid())
  /// 유저 아이디
  userId     String
  /// 캠페인 아이디
  campaignId String
  deletedAt  DateTime?
  updatedAt  DateTime  @updatedAt
  createdAt  DateTime  @default(now())

  // relation fields
  userDetail     User     @relation(fields: [userId], references: [id])
  campaignDetail Campaign @relation(fields: [campaignId], references: [id])
}

/// 파싱 이벤트
model ParsingEvent {
  id           String    @id @default(cuid())
  /// 파싱 이벤트 타입
  eventType    String
  /// 파싱 이벤트 상태
  eventStatus  String
  /// 파싱 이벤트 메시지
  eventMessage String
  /// 파싱 작업 완료일
  completedAt  DateTime?
  updatedAt    DateTime  @updatedAt
  createdAt    DateTime  @default(now())
}

/// 파싱 이벤트 로그
model ParsingEventLog {
  id        String   @id @default(cuid())
  /// 파싱 이벤트 아이디
  eventId   String
  /// 파싱 이벤트 로그 메시지
  message   String
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  // relation fields
  // 로그 테이블은 관계를 맺지 않는다.
}
